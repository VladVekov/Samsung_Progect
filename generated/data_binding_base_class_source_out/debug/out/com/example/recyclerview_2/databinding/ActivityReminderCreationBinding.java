// Generated by view binder compiler. Do not edit!
package com.example.recyclerview_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.recyclerview_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReminderCreationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button create;

  @NonNull
  public final TextView deadline;

  @NonNull
  public final TextView deadlineTime;

  @NonNull
  public final CheckBox isFinished;

  @NonNull
  public final TextView needsDone;

  @NonNull
  public final Button notCreate;

  @NonNull
  public final ImageButton setDay;

  @NonNull
  public final ImageButton setTime;

  @NonNull
  public final EditText taskName;

  private ActivityReminderCreationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button create, @NonNull TextView deadline, @NonNull TextView deadlineTime,
      @NonNull CheckBox isFinished, @NonNull TextView needsDone, @NonNull Button notCreate,
      @NonNull ImageButton setDay, @NonNull ImageButton setTime, @NonNull EditText taskName) {
    this.rootView = rootView;
    this.create = create;
    this.deadline = deadline;
    this.deadlineTime = deadlineTime;
    this.isFinished = isFinished;
    this.needsDone = needsDone;
    this.notCreate = notCreate;
    this.setDay = setDay;
    this.setTime = setTime;
    this.taskName = taskName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReminderCreationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReminderCreationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reminder_creation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReminderCreationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.create;
      Button create = rootView.findViewById(id);
      if (create == null) {
        break missingId;
      }

      id = R.id.deadline;
      TextView deadline = rootView.findViewById(id);
      if (deadline == null) {
        break missingId;
      }

      id = R.id.deadline_time;
      TextView deadlineTime = rootView.findViewById(id);
      if (deadlineTime == null) {
        break missingId;
      }

      id = R.id.isFinished;
      CheckBox isFinished = rootView.findViewById(id);
      if (isFinished == null) {
        break missingId;
      }

      id = R.id.needs_done;
      TextView needsDone = rootView.findViewById(id);
      if (needsDone == null) {
        break missingId;
      }

      id = R.id.notCreate;
      Button notCreate = rootView.findViewById(id);
      if (notCreate == null) {
        break missingId;
      }

      id = R.id.set_day;
      ImageButton setDay = rootView.findViewById(id);
      if (setDay == null) {
        break missingId;
      }

      id = R.id.set_time;
      ImageButton setTime = rootView.findViewById(id);
      if (setTime == null) {
        break missingId;
      }

      id = R.id.task_name;
      EditText taskName = rootView.findViewById(id);
      if (taskName == null) {
        break missingId;
      }

      return new ActivityReminderCreationBinding((ConstraintLayout) rootView, create, deadline,
          deadlineTime, isFinished, needsDone, notCreate, setDay, setTime, taskName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
